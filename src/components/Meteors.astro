---
import { cn } from '@/lib/utils';

interface Props {
  number?: number;
  minDelay?: number;
  maxDelay?: number;
  minDuration?: number;
  maxDuration?: number;
  angle?: number;
  className?: string;
}

const {
  number = 20,
  minDelay = 0.2,
  maxDelay = 1.2,
  minDuration = 2,
  maxDuration = 10,
  angle = 215,
  className,
} = Astro.props;

// Generate meteor styles server-side
const meteorStyles = Array.from({ length: number }, () => ({
  '--angle': `${angle}deg`,
  top: '0px',
  left: `${Math.floor(Math.random() * 100)}%`, // Random horizontal position (0-100%)
  animationDelay: `${Math.random() * (maxDelay - minDelay) + minDelay}s`,
  animationDuration: `${Math.floor(Math.random() * (maxDuration - minDuration) + minDuration)}s`,
}));
---

<>
  {
    meteorStyles.map((style, idx) => (
      <span
        style={style}
        class={cn(
          'animate-meteor pointer-events-none absolute -z-50 size-0.5 rotate-[var(--angle)] rounded-full bg-zinc-500 shadow-[0_0_0_1px_#ffffff10]',
          className,
        )}
      >
        <div class='pointer-events-none absolute left-0 top-0 -z-10 h-px w-[50px] -translate-y-1/2 bg-gradient-to-r from-zinc-500 to-transparent' />
      </span>
    ))
  }
</>

<!-- <script>
  document.querySelectorAll('.meteor').forEach((meteor) => {
    meteor. .style.left = `${Math.floor(Math.random() * window.innerWidth)}px`;
  });
</script> -->
